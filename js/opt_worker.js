'use strict';function X1Opt(matrix,tour){var N=tour.length;function _dist(i1,i2){return matrix[tour[i1]*N+tour[i2]]}function _find_1opt(){if(N<4)return;var best=-1E-6;var res;for(var i=0;i<N;i++)for(var j=0;j<N;j++){if(i==j)continue;var i_p=(i-1+N)%N;var i_n=(i+1)%N;var j_p=(j-1+N)%N;var j_n=(j+1)%N;var diff;if(i_n==j){var pre=_dist(i_p,i)+_dist(j,j_n);var post=_dist(i_p,j)+_dist(i,j_n);diff=post-pre}else{var pre=_dist(i_p,i)+_dist(i,i_n)+_dist(j_p,j);var post=_dist(i_p,i_n)+_dist(j_p,i)+_dist(i,
j);diff=post-pre}if(diff<best)return[i,j]}return res}function _do1opt(tour,pair){var src=pair[0];var hopser=tour.splice(src,1);var dest=pair[1];if(dest>src+1)dest--;tour.splice(dest,0,hopser[0])}var pair=_find_1opt();if(pair){var res=tour.slice();_do1opt(res,pair);return res}}
function X2Opt(matrix,tour){var N=tour.length;function _dist(i1,i2){return matrix[tour[i1]*N+tour[i2]]}function _find_2opt(){var best=0,res;if(N<4)return;for(var i=1;i<N;i++)for(var j=i+1;j<N;j++){var pre=_dist(i-1,i)+_dist(j,(j+1)%N);var post=_dist(i-1,j)+_dist((j+1)%N,i);var diff=post-pre;if(diff<best-1E-7)return[i,j]}return res}function _swap(t,x1,x2){var tmp=t[x1];t[x1]=t[x2];t[x2]=tmp}function _do2opt(tour,pair){var lo=pair[0];var hi=pair[1];while(lo<hi){_swap(tour,lo,hi%N);lo++;hi--}}var pair=
_find_2opt();if(pair){var res=tour.slice();_do2opt(res,pair);return res}}
function LinKern(matrix,tour,mode,updater){var EPS=1E-5;var N=tour.length;var breadth_a=4;var breadth_b=4;var breadth_d=2;var MAX_LEVEL=25;function breadth(k){switch(k){case 1:return 4;case 2:return 3;case 3:return 2;default:return 1}}function tour_length(t){var sum=0,n=t.length;for(var i=0;i<n;i++)sum+=matrix[t[i]*N+t[(i+1)%n]];return sum}function improve_matches(t1,t2,g){return Math.abs(tour_length(t1)-tour_length(t2)-g)<EPS}function unscramble_edge(x){return[x%N,Math.floor(x/N)]}function step(tour,
base,level,delta,history,type){if(level>MAX_LEVEL)return;function edge_hash(x1,x2){return tour[x1]<tour[x2]?tour[x1]*N+tour[x2]:tour[x2]*N+tour[x1]}function edge_hash_v(v1,v2){return v1<v2?v1*N+v2:v2*N+v1}function c(a,b){return matrix[tour[a]*N+tour[b]]}function next(x){return(x+1)%N}function prev(x){return(x-1+N)%N}function promising(base,a){var g=delta+c(base,next(base))-c(next(base),a);return g>EPS}function mm_promising(base,a){var g=delta+c(base,next(base))-c(base,a);return g>EPS}function lk_order(base){var list=
[];for(var a=(base+3)%N;a!=base;a=next(a))if(promising(base,a))list.push({v:a,w:c(prev(a),a)-c(next(base),a),trans:[prev(a),next(base),1,a,base,0],op:"LK",type:1});for(var a=(base+2)%N;a!=prev(base);a=next(a))if(mm_promising(base,a))list.push({v:a,w:c(a,next(a))-c(base,a),trans:[next(base),a,0,base,next(a),1],op:"MM",type:2});list.sort(function(a,b){return b.w-a.w});var res=[];for(var i=0;i<list.length;i++){var x=list[i];if(!test_changed_edges(x.trans))continue;res.push(x);if(res.length>=breadth(level))break}return res}
function b_promising(a,b,base){var g=c(a,next(a))+c(base,next(base))-c(base,a)-c(next(a),b);return g>EPS}function d_promising(a,b,b1,d,base){var g=c(b,b1)+c(base,next(base))-c(next(base),a)+c(a,next(a))-c(next(a),b)-c(b1,d);return g>EPS}function sort_and_limit(list,breadth){list.sort(function(a,b){return b.w-a.w});if(list.length>breadth)list.splice(breadth,list.length-breadth)}function a_order(base){var list=[];for(var a=(base+2)%N;a!=prev(base);a=next(a))if(promising(base,a))list.push({v:a,w:c(a,
next(a))-c(base,a)});sort_and_limit(list,breadth_a);return list}function b_order(a,base){var list=[];for(var b=(base+2)%N;b!=base;b=next(b)){if(b===a)continue;if(b===next(a))continue;if(prev(b)===next(a))continue;if(b_promising(a,b,base)){list.push({pair:[b,next(b)],w:c(next(b),b)-c(next(a),b),trans:[next(b),a,0,next(base),b,0,next(a),base,0],op:"B1",type:1});if(prev(b)!=next(base))list.push({pair:[b,prev(b)],w:c(prev(b),b)-c(next(a),b),trans:[prev(b),next(base),1,a,b,1,next(a),base,0],op:"B2",type:2})}}sort_and_limit(list,
breadth_b);return list}function d_order(b,b1,base,a){var b_type=1;if(b1===prev(b))b_type=2;var list=[];for(var d=(base+2)%N;d!=a;d=next(d))if(d_promising(a,b,b1,d,base)){if(b_type===2)list.push({pair:[d,next(d)],w:c(next(d),d)-c(b1,d),trans:[next(d),a,0,next(base),d,0,b1,next(a),1,b,base,0],op:"D1",type:1});if(next(base)!=prev(d)){var xb,xb1;if(b_type===1){if(b1===base)continue;xb1=b1;xb=b}else{xb1=b;xb=b1}list.push({pair:[d,prev(d)],w:c(prev(d),d)-c(b1,d),trans:[prev(d),next(base),1,a,d,1,xb,next(a),
1,xb1,base,0],op:"D2",type:2})}}sort_and_limit(list,breadth_d);return list}function in_order(a,b,c){if(a<c)return a<b&&b<c;return a<b||b<c}function test_changed_edges(seq){for(var i=0,n=seq.length;i<n;i+=3){var src=seq[i],dst=seq[i+1],back=seq[i+2],ahead=seq[(i+3)%n];var removed=back?edge_hash(dst,prev(dst)):edge_hash(src,prev(src));if(history[removed])return false;if(i+3<n){var added=edge_hash(dst,ahead);if(history[added])return false}}return true}function changed_edges(seq){var linked=[],killed=
[];for(var i=0,n=seq.length;i<n;i+=3){var src=seq[i],dst=seq[i+1],back=seq[i+2],ahead=seq[(i+3)%n];killed.push(back?edge_hash(dst,prev(dst)):edge_hash(src,prev(src)));if(i+3<n)linked.push(edge_hash(dst,ahead))}return{add:linked,rem:killed}}function push_changes(op,chg){var add=chg.add,rem=chg.rem;for(var i=0,n=add.length;i<n;i++)history[add[i]]=1;for(var i=0,n=rem.length;i<n;i++)history[rem[i]]=2}function pop_changes(chg){var add=chg.add,rem=chg.rem;for(var i=0,n=add.length;i<n;i++)delete history[add[i]];
for(var i=0,n=rem.length;i<n;i++)delete history[rem[i]]}function transform_gain(seq){var gain=0;for(var i=0,n=seq.length;i<n;i+=3){var src=seq[i],dst=seq[i+1],back=seq[i+2],ahead=seq[(i+3)%n];gain+=back?c(dst,prev(dst)):c(src,prev(src));gain-=c(dst,ahead)}return gain}function transform(op,seq){var res=new Array(tour.length);var oi=0;for(var i=0,n=seq.length;i<n;i+=3){var x=seq[i],dst=seq[i+1],back=seq[i+2];res[oi++]=tour[x];if(back)while(x!=dst){x=prev(x);res[oi++]=tour[x]}else while(x!=dst){x=next(x);
res[oi++]=tour[x]}}var g0=transform_gain(seq);return{g:g0,tour:res}}function transform_step(op,seq,newbase,level){var dat=transform(op,seq);var changes=changed_edges(seq);push_changes(op,changes);if(delta+dat.g>EPS){history[edge_hash_v(dat.tour[N-1],dat.tour[0])]=1;return{delta:delta+dat.g,tour:dat.tour,level:level,op:"#"}}var subres=step(dat.tour,newbase,level+1,delta+dat.g,history,"default");if(subres)return subres;pop_changes(changes)}if(type==="default"){var list=lk_order(base);for(var i=0;i<
list.length;i++){var a=list[i].v;var trans=list[i].trans,op=list[i].op;var res=transform_step(op,trans,N-1,level);if(res){res.op=op+","+res.op;return res}}}else{var a_list=a_order(base);for(var i=0;i<a_list.length;i++){var a=a_list[i].v;var b_list=b_order(a,base);for(var j=0;j<b_list.length;j++){var b=b_list[j].pair[0];var b1=b_list[j].pair[1];if(in_order(next(base),b,a)){var trans=b_list[j].trans,op=b_list[j].op;var res=transform_step(op,trans,N-1,2);if(res){res.op=op+","+res.op;return res}}else{var d_list=
d_order(b,b1,base,a);for(var k=0;k<d_list.length;k++){var trans=d_list[k].trans,op=d_list[k].op;var res=transform_step(op,trans,N-1,3);if(res){res.op=op+","+res.op;return res}}}}}}}function kick(tour,mark,mode){function c(a,b){return matrix[tour[a]*N+tour[b]]}function next(x){return(x+1)%N}function prev(x){return(x-1+N)%N}function transform(seq){var res=new Array(tour.length);var oi=0;for(var i=0,n=seq.length;i<n;i+=3){var x=seq[i],dst=seq[i+1],back=seq[i+2];res[oi++]=tour[x];if(back)while(x!=dst){x=
prev(x);res[oi++]=tour[x]}else while(x!=dst){x=next(x);res[oi++]=tour[x]}}return res}function random_select(arr,n){var L=arr.length;if(L==n)return arr.slice();var mark=new Array(L);var res=[];for(var i=0;i<n;i++){var idx=Math.floor(Math.random()*L);while(mark[idx])idx=(idx+1)%L;mark[idx]=1;res.push(arr[idx])}return res}function kick_initial(n){return Math.floor(Math.random()*N)}function pick_from_list(v,list){var pos=0,L=list.length;while(pos<L&&list[pos]<v)pos++;pos=pos%L;var w=[v];for(var i=1;i<
4;i++){w[i]=list[pos];pos=(pos+1)%L;if(w[i]===next(w[i-1])){w[i]=list[pos++];pos=(pos+1)%L}}return w}function pick_random_kick(){var idxs=[];for(var i=0;i<N;i++)idxs.push(i);var list=random_select(idxs,8).sort(function(a,b){return a-b});var v=list.shift();return pick_from_list(v,list)}function pick_long_kick(){var weights=[];for(var i=0;i<N;i++)weights.push({tidx:i,weight:c(i,next(i))});var list=weights.sort(function(a,b){return b.weight-a.weight}).map(function(x){return x.tidx});list=list.sort(function(a,
b){return a-b});if(list>8)list.splice(8,list.length-8);var v=list.shift();return pick_from_list(v,list)}function pick_close_kick(n1,nalpha){var v=kick_initial(n1);var idxs=[];for(var i=0;i<tour.length;i++)idxs.push(i);var cands=random_select(idxs,nalpha);var dists=cands.map(function(i){return{idx:i,dist:c(i,v)}}).sort(function(a,b){return a.dist-b.dist});if(dists[0].idx===v)dists.shift();var L=7;dists.splice(L,dists.length-L);var list=dists.sort(function(a,b){return a.idx-b.idx}).map(function(x){return x.idx});
return pick_from_list(v,list)}var w;switch(mode){case "close":var alpha=.3;var nalpha=Math.floor(tour.length*alpha);if(nalpha<8)nalpha=8;w=pick_close_kick(nalpha,nalpha);break;case "random":w=pick_random_kick();break;case "long":w=pick_long_kick();break;default:}if(mark)for(var i=0;i<w.length;i++){mark[tour[w[i]]]=0;mark[tour[next(w[i])]]=0}return transform([next(w[0]),w[1],0,next(w[3]),w[0],0,next(w[2]),w[3],0,next(w[1]),w[2],0])}function one_step(v){var res;var hist={};res=step(tour,v,1,0,hist,
"default");if(res){res.hist=hist;return res}res=step(tour,v,1,0,hist,"alternate");if(res){res.hist=hist;return res}}function unmark_step_hist(res,mark){for(var edge in res.hist){var pts=unscramble_edge(edge);mark[pts[0]]=0;mark[pts[1]]=0}}function algo_loop(mark){var go;var iteration=0;do{go=0;for(var i=0;i<tour.length;i++){var v=tour[i];if(mark[v])continue;go++;var res=one_step(i);if(res){unmark_step_hist(res,mark);tour=res.tour;break}else mark[v]=1}iteration++}while(go)}function brute_step(){var start=
Math.floor(Math.random()*N);for(var i=(start+1)%N;i!=start;i=(i+1)%N){var res=one_step(i);if(res)return res.tour}}function postprocess(tour){var nt;while(nt=X2Opt(matrix,tour))tour=nt;while(nt=X1Opt(matrix,tour))tour=nt;return tour}function chained_lk(){var iters=0;algo_loop([]);iters++;var best=tour.slice();if(updater)updater(best);var max_nop0=5;while(max_nop0){max_nop0--;tour.reverse();tour=kick(tour,null,"random");var mark=[];algo_loop(mark);iters++;if(tour_length(tour)<tour_length(best)){best=
tour.slice();max_nop0=3;if(updater)updater(best)}var max_nop=2;while(max_nop){tour=kick(tour,mark,"close");algo_loop(mark);iters++;if(tour_length(tour)<tour_length(best)){best=tour.slice();max_nop=2;max_nop0=3;if(updater)updater(best)}else max_nop--}}return postprocess(best)}switch(mode){case "step":return brute_step();case "full":return chained_lk();case "object":break;default:}var _chain_state={mark:[],best:tour.slice(),len:tour_length(tour),iterations:0,kicks:["long","random","random","long","random",
"best","random"]};this.chain_step=function(){var mark=_chain_state.mark;var stepped=false;var ncands;do{ncands=0;for(var i=0;i<N;i++)if(!mark[tour[i]]){ncands++;var res=one_step(i);if(res){unmark_step_hist(res,mark);tour=res.tour;stepped=true}else mark[tour[i]]=1;break}}while(!stepped&&ncands);var newlen=tour_length(tour);if(newlen<_chain_state.len){_chain_state.best=tour.slice();_chain_state.len=newlen}if(stepped)return;tour.reverse();var m=_chain_state.kicks;var meth=m[_chain_state.iterations%m.length];
_chain_state.iterations++;if(tour.length>=8){switch(meth){case "long":tour=kick(tour,false,"long");break;case "random":tour=kick(tour,false,"random");break;case "close":tour=kick(tour,false,"close");break;case "best":tour=kick(_chain_state.best,false,"random");break;default:}_chain_state.mark=[]}};this.chain_tour=function(){return _chain_state.best};this.chain_len=function(){return _chain_state.len};this.chain_iterations=function(){return _chain_state.iterations};this.chain_postprocess=function(){_chain_state.best=
postprocess(_chain_state.best);_chain_state.len=tour_length(_chain_state.best)}}
function OptLib(locs){this.locs=locs;this.ldata=locs.map(function(){return{dist:MAXVAL,used:false}});this.tour=[];var N=locs.length;function _dist(v1,v2){var dx=v2.x-v1.x,dy=v2.y-v1.y;return Math.sqrt(dx*dx+dy*dy)}var matrix;if(typeof Float32Array==="function")matrix=new Float32Array(N*N);else matrix=new Array(N*N);var moff=0;for(var mi=0;mi<N;mi++){matrix[moff+mi]=0;for(var mj=mi+1,off2=mj*N;mj<N;mj++,off2+=N){var d=_dist(locs[mi],locs[mj]);matrix[moff+mj]=d;matrix[off2+mi]=d}moff+=N}this.matrix=
matrix;this.N=N;this._dist=function(i1,i2){return this.matrix[i1*N+i2]}}function cmp_far(d,best){return d>best}function cmp_near(d,best){return d<best}
OptLib.prototype={length:function(){var t=this.tour,n=t.length,sum=0,N=this.N;for(var i=0;i<n;i++)sum+=this._dist(t[i],t[(i+1)%N]);return sum},construct:function(mode,initial,firstidx){var locs=this.locs;if(this.N<=3){var ix=0;this.tour=this.locs.map(function(){return ix++});return this.tour}if(initial&&initial.length>=2){for(var i=0;i<initial.length;i++)for(var j=0;j<locs.length;j++)if(initial[i]===locs[j]){this.tour.push(j);this.ldata[j].used=true;break}if(this.tour.length===this.N)return this.tour;
this._reset_dist();switch(mode){case "near":case "nneigh":this._reconstruct(cmp_near);return this.tour;case "far":this._reconstruct(cmp_far);return this.tour;default:}}else switch(mode){case "nneigh":this._nearest_neighbors(firstidx);return this.tour;case "near":this._construct(cmp_near);return this.tour;case "far":this._construct(cmp_far);return this.tour;default:}},optimize_step:function(){if(this.N<=3)return;var nt=LinKern(this.matrix,this.tour,"step");if(nt){this.tour=nt;return this.tour}nt=X2Opt(this.matrix,
this.tour);if(nt){this.tour=nt;return this.tour}nt=X1Opt(this.matrix,this.tour);if(nt){this.tour=nt;return this.tour}},optimize_all:function(callback){if(this.N<=3)return;var nt=LinKern(this.matrix,this.tour,"full",callback);if(nt){this.tour=nt;return this.tour}},optimizer:function(){if(this.N<=3)return;return new LinKern(this.matrix,this.tour,"object")},_calc_dist:function(lidx){var N=this.N;var min=MAXVAL;for(var i=0;i<N;++i){if(!this.ldata[i].used)continue;var d=this._dist(i,lidx);if(d<min)min=
d}return min},_reset_dist:function(){var N=this.N;for(var i=0;i<N;++i){if(this.ldata[i].used)continue;this.ldata[i].dist=this._calc_dist(i)}},_nearest_neighbors:function(firstidx){var locs=this.locs,used={},lidx=firstidx;used[locs[firstidx].id]=1;this.tour=[lidx];while(this.tour.length!=locs.length){lidx=this._find_neighbor(lidx,used);this.tour.push(lidx);used[locs[lidx].id]=1}},_find_neighbor:function(idx,used){var locs=this.locs,min_d=MAXVAL,best;for(var i=0;i<locs.length;i++){if(used[locs[i].id])continue;
var d=this._dist(i,idx);if(d<min_d){min_d=d;best=i}}return best},_construct:function(cmp){this.tour=this._find_first(cmp);var ld=this.ldata,t=this.tour;ld[t[0]].used=true;this._update_dist(t[0],cmp);ld[t[1]].used=true;var next=this._update_dist(t[1],cmp);while(next>=0){this._cheapest_insert(next);next=this._update_dist(next,cmp)}},_reconstruct:function(cmp){var next=this._find_best(cmp);while(next>=0){this._cheapest_insert(next);next=this._update_dist(next,cmp)}},_find_best:function(cmp){var idx=
-1,best;for(var i=0;i<this.locs.length;i++){if(this.ldata[i].used)continue;var dist=this.ldata[i].dist;if(best===undefined||cmp(dist,best)){best=dist;idx=i}}return idx},_find_first:function(cmp){var result=[],best,N=this.N;for(var i=0;i<N;++i)for(var j=i+1;j<N;++j){var d=this._dist(i,j);if(best===undefined||cmp(d,best)){best=d;result=[i,j]}}return result},_update_dist:function(lidx,cmp){var best,res=-1,ld=this.ldata,N=this.N;for(var i=0;i<N;i++){if(ld[i].used)continue;var d=this._dist(lidx,i);if(d<
ld[i].dist)ld[i].dist=d;if(best===undefined||cmp(ld[i].dist,best)){best=ld[i].dist;res=i}}return res},_cheapest_insert:function(lidx){var t=this.tour;if(t.length<3){t[t.length]=lidx;this.ldata[lidx].used=true;return}var min=this._insert_delta(t[t.length-1],t[0],lidx);var pos=t.length;for(var i=1;i<t.length;i++){var diff=this._insert_delta(t[i-1],t[i],lidx);if(diff<min){min=diff;pos=i}}this._insert(lidx,pos)},_insert_delta:function(ix1,ix2,il){return this._dist(ix1,il)+this._dist(ix2,il)-this._dist(ix1,
ix2)},_insert:function(lidx,pos){this.tour.splice(pos,0,lidx);this.ldata[lidx].used=true}};
function OptWorker(on_step){var lkopt;var lklen;var stop_time;function opt_step(){if(!lkopt)return;if(lkopt.chain_iterations()<20&&Date.now()<stop_time){lkopt.chain_step();if(lkopt.chain_len()<lklen){var tour=lkopt.chain_tour();lklen=lkopt.chain_len();on_step(tour)}setTimeout(opt_step,0)}else{lkopt.chain_postprocess();if(lkopt.chain_len()<lklen){var tour=lkopt.chain_tour();lklen=lkopt.chain_len();on_step(tour)}lkopt=undefined;lklen=MAXVAL;stop_time=0}}this.set_locations=function(locs){stop_time=Date.now()+
5E3;var opt=new OptLib(locs);var tour=opt.construct("far");on_step(tour);lkopt=opt.optimizer();if(lkopt){lklen=lkopt.chain_len();setTimeout(opt_step,0)}};this.stop=function(){lkopt=undefined;lklen=MAXVAL;stop_time=0};this.postMessage=function(data){if(typeof data==="string"&&data=="stop")this.stop();else this.set_locations(data)}}var MAXVAL=999999999;function min(x1,x2){return x1>x2?x2:x1}function max(x1,x2){return x1<x2?x2:x1}
function _assert(test,msg){if(!test){console.trace();if(msg)throw"assertion failed: "+msg;throw"assertion failed";}}var _worker=new OptWorker(function(tour){postMessage(tour)});self.onmessage=function(msg){_worker.postMessage(msg.data)};
